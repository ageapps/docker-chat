kind: Service
apiVersion: v1
metadata:
  name: docker-chat
  labels:
    app: docket-chat
    tier: backend
spec:
  selector:
    app: docker-chat
    tier: backend
  ports:
  - protocol: TCP
    port: 8080
    name: http
    targetPort: 3000 

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: docker-chat
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: docker-chat
        tier: backend
    spec:
      containers:
      - name: "docker-chat"
        image: "ageapps/docker-chat:app"
        imagePullPolicy: Always
        ports:
          - containerPort: 3000
        command: ["bash", "-c", "nodemon ./bin/www"]
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: app.port
        - name: DEBUG
          value: "docker-chat:*"
        - name: MONGO_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: db.password
        - name: MONGO_USERNAME
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: db.username
        - name: MONGO_DATABASE
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: db.database
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: db.port
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: db.host
        - name: SCALABLE
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: app.scalable
        ###### MESSAGE BROKERS ########
        # REDIS
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: app.redis_host
        # # RABBIT
        # - name: RABBIT_HOST
        #   valueFrom:
        #     configMapKeyRef:
        #       name: global-config
        #       key: app.rabbit_host
        # # NATS
        # - name: NATS_HOST
        #   valueFrom:
        #     configMapKeyRef:
        #       name: global-config
        #       key: app.nats_host

        ######   DEVELOPMENT VARIABLE #######
        - name: REDEPLOY_VAR
          value: "v1"


        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 10
