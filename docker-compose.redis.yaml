version: "2.1"
services:
  proxy:
    image: traefik
    command: --web --docker --docker.domain=docker.localhost --logLevel=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml

  app:
    build: ./app
    image: ageapps/docker-chat:app
    volumes:
      - ./app:/app # volume in host -> $(pwd)/database
      - /app/node_modules # volume node_modules from container
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.backend=app"
      - "traefik.frontend.rule=Host:app.docker.localhost"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "traefik.backend.loadbalancer.stickiness.cookieName=back"
    environment:
      - DEBUG=docker-chat:*
      - MONGO_USERNAME=node
      - MONGO_PASSWORD=node
      - MONGO_DATABASE=nodedb
      - SCALABLE=true
      - REDIS_HOST=redis
      - PARSE_MSG=true
    # ports:
    #   - 8080:3000
    command: [nodemon, ./bin/www]

  db:
    build: ./mongo
    image: ageapps/docker-chat:mongo
    volumes:
      - ./database:/data # volume in host -> $(pwd)/database
    environment:
      - MONGO_DB_APP_PASSWORD=node
      - MONGO_DB_APP_USERNAME=node
      - MONGO_DB_APP_DATABASE=nodedb
    ports:
      - "27017:27017"    
    healthcheck:
      test: ["CMD", "echo", "show dbs", "|", "mongo"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: mongod --smallfiles
    
  redis:
    image: redis
    ports:
      - "6379:6379"
